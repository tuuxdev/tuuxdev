/*window.onload = function() {
    if (window.jQuery) {  
        // jQuery is loaded  
        alert("Yeah!");
    } else {
        // jQuery is not loaded
        alert("Doesn't Work");
    }
}*/
/* ===========================================================================
 * WELLCOME LANGUAGE
 * ==========================================================================*/
$('.wellcome-language a.wellcome-langswitch').click(function () {
  $(".wellcome-language").fadeOut(1200);
  $(".langswitch").removeClass("active");
  if ($(this).hasClass("wellcome-en_EN")) {
    $(".langswitch.en_EN").addClass("active");
  } else if ($(this).hasClass("wellcome-es_ES")) {
    $(".langswitch.es_ES").addClass("active");
  }
  $("body").css({
    overflow: 'auto'
  });
});
/* ===========================================================================
 * AUTO HIDE HEADER
 * ==========================================================================*/
jQuery(document).ready(function ($) {
  var mainHeader = $('.cd-auto-hide-header'),
    secondaryNavigation = $('.cd-secondary-nav'),
    //this applies only if secondary nav is below intro section
    belowNavHeroContent = $('.sub-nav-hero'),
    headerHeight = mainHeader.height();

  //set scrolling variables
  var scrolling = false,
    previousTop = 0,
    currentTop = 0,
    scrollDelta = 10,
    scrollOffset = 200;

  mainHeader.on('click', '.nav-trigger', function (event) {
    // open primary navigation on mobile
    event.preventDefault();
    mainHeader.toggleClass('nav-open');
  });

  $(window).on('scroll', function () {
    if (!scrolling) {
      scrolling = true;
      (!window.requestAnimationFrame) ?
      setTimeout(autoHideHeader, 250): requestAnimationFrame(autoHideHeader);
    }
  });

  $(window).on('resize', function () {
    headerHeight = mainHeader.height();
  });

  function autoHideHeader() {
    var currentTop = $(window).scrollTop();

    (belowNavHeroContent.length > 0) ?
    checkStickyNavigation(currentTop) // secondary navigation below intro
      : checkSimpleNavigation(currentTop);

    previousTop = currentTop;
    scrolling = false;
  }

  function checkSimpleNavigation(currentTop) {
    //there's no secondary nav or secondary nav is below primary nav
    if (previousTop - currentTop > scrollDelta) {
      //if scrolling up...
      mainHeader.removeClass('is-hidden');
    } else if (currentTop - previousTop > scrollDelta && currentTop > scrollOffset) {
      //if scrolling down...
      mainHeader.addClass('is-hidden');
    }
  }

  function checkStickyNavigation(currentTop) {
    //secondary nav below intro section - sticky secondary nav
    var secondaryNavOffsetTop = belowNavHeroContent.offset().top - secondaryNavigation.height() - mainHeader.height();

    if (previousTop >= currentTop) {
      //if scrolling up... 
      if (currentTop < secondaryNavOffsetTop) {
        //secondary nav is not fixed
        mainHeader.removeClass('is-hidden');
        secondaryNavigation.removeClass('fixed slide-up');
        belowNavHeroContent.removeClass('secondary-nav-fixed');
      } else if (previousTop - currentTop > scrollDelta) {
        //secondary nav is fixed
        mainHeader.removeClass('is-hidden');
        secondaryNavigation.removeClass('slide-up').addClass('fixed');
        belowNavHeroContent.addClass('secondary-nav-fixed');
      }

    } else {
      //if scrolling down...	
      if (currentTop > secondaryNavOffsetTop + scrollOffset) {
        //hide primary nav
        mainHeader.addClass('is-hidden');
        secondaryNavigation.addClass('fixed slide-up');
        belowNavHeroContent.addClass('secondary-nav-fixed');
      } else if (currentTop > secondaryNavOffsetTop) {
        //once the secondary nav is fixed, do not hide primary nav if you haven't scrolled more than scrollOffset 
        mainHeader.removeClass('is-hidden');
        secondaryNavigation.addClass('fixed').removeClass('slide-up');
        belowNavHeroContent.addClass('secondary-nav-fixed');
      }

    }
  }
});
/* ===========================================================================
 * CHANGING TEXT ON INDEX HEADER
 * ==========================================================================*/
var $changer1 = $("#changeText1"),
  i = 0,
  speed = 200;
var words = new Array()
words[0] = "thinker";
words[1] = "mover";
words[2] = "doer";
words[3] = "designer";

window.setInterval(function () {
  $changer1.fadeOut(speed, function () {
    $changer1.text(words[(++i % words.length)]);
    $changer1.fadeIn(speed);
  });
}, 3500);

var $changer2 = $("#changeText2"),
  i2 = 0,
  speed = 200,
  words2 = new Array;
words2[0] = "thinker", words2[1] = "mover", words2[2] = "doer", words2[3] = "designer", window.setInterval(
  function () {
    $changer2.fadeOut(speed, function () {
      $changer2.text(words[++i2 % words2.length]), $changer2.fadeIn(speed)
    })
  }, 3500);


/* ===========================================================================
 * PARALLAX HEADER
 * ==========================================================================*/
$(window).on('scroll', function () {
  var scrollTop = $(window).scrollTop(),
    x = $(this).scrollTop(),
    moveamount = (x * 0.45);

  $('.scroll-move').css({
    transform: 'translateY(' + moveamount + 'px) translate3d(0,0,0)',
  });
});
/* ===========================================================================
 * ANCHOR LINK
 * ==========================================================================*/
$('a.to-anchor').click(function () {
  $('html, body').animate({
    scrollTop: $($(this).attr('href')).offset().top
  }, 400, "linear");
  return false;
});
/* ===========================================================================
 * PORTFOLIO VENOBOX
 * ==========================================================================*/

$('.venobox').venobox({
  framewidth: '100%',
  frameheight: '90vh',
  numeratio: true,
  infinigall: true
});
/* ===========================================================================
 * LANGUAGE SWITCHER
 * ==========================================================================*/
document.addEventListener("DOMContentLoaded", function () {
  document.body.classList.add('en');
});

function langSwitcher(selector, show, hide) {
  "use strict";
  var btn = document.querySelector(selector);
  var body = document.body;

  btn.addEventListener("click", function () {
    body.classList.remove(hide);
    body.classList.add(show);
    Cookies.set('lang', show);
  });
}

langSwitcher('.es_ES', 'es', 'en');
langSwitcher('.en_EN', 'en', 'es');
langSwitcher('.wellcome-es_ES', 'es', 'en');
langSwitcher('.wellcome-en_EN', 'en', 'es');

// ACTIVE CLASS

function navActiveClass(selector, activeClass) {
  "use strict";
  var items = Array.from(document.querySelectorAll(selector));

  var handleClick = function remover(e) {
    e.preventDefault();
    items.forEach(function (node) {
      node.classList.remove(activeClass);
    });
    e.currentTarget.classList.add(activeClass);
  };

  items.forEach(function (node) {
    node.addEventListener('click', handleClick);
  });
}
navActiveClass('.langswitch', 'active');

/* ===========================================================================
 * SMOTHSCROLL
 * ==========================================================================*/
$('a[href*="#"]')
  // Remove links that don't actually link to anything
  .not('[href="#"]')
  .not('[href="#0"]')
  .click(function (event) {
    // On-page links
    if (
      location.pathname.replace(/^\//, '') == this.pathname.replace(/^\//, '') &&
      location.hostname == this.hostname
    ) {
      // Figure out element to scroll to
      var target = $(this.hash);
      target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');
      // Does a scroll target exist?
      if (target.length) {
        // Only prevent default if animation is actually gonna happen
        event.preventDefault();
        $('html, body').animate({
          scrollTop: target.offset().top
        }, 1000, function () {
          // Callback after animation
          // Must change focus!
          var $target = $(target);
          $target.focus();
          if ($target.is(":focus")) { // Checking if the target was focused
            return false;
          } else {
            $target.attr('tabindex', '-1'); // Adding tabindex for elements not focusable
            $target.focus(); // Set focus again
          };
        });
      }
    }
  });
/* ===========================================================================
 * FIXED ELEMENT
 * ==========================================================================*/
//$("#portfolio-headline").stick_in_parent();
/* ===========================================================================
 * LAZY LOAD IMG
 * ==========================================================================*/
// window.sr = ScrollReveal();
// sr.reveal('.portfolio-item, .fancy_gif');
/* ===========================================================================
 * NEXT
 * ==========================================================================*/